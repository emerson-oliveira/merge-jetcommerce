@model DomainCustomer.Entities.Customer

@{
    ViewBag.Title = "Cadastre-se e seja nosso cliente!";
    Layout = "~/Views/Shared/Base/_LayoutBreadCrumbContent.cshtml";
    string termo = string.Empty;

    if (@ViewBag.Termo != null)
    {
        termo = WebUtility.HtmlDecode(@ViewBag.Termo); ;
    }

    string emailDefault = !string.IsNullOrEmpty((string)Session["Email"]) ? (string)Session["Email"] : "";
    string cpfCnpj = !string.IsNullOrEmpty((string)Session["CpfCnpj"]) ? Session["CpfCnpj"].ToString().Replace(".", "").Replace("/", "").Replace("-", "") : "";
}




@section breadcrumbs {
    <div class="ui container">
        <div class="ui grid stackable middle aligned">
            <div class="row one column">
                <div class="column">
                    <h1 class="text uppercase">@ViewBag.Title</h1>
                    <div class="ui breadcrumb text small uppercase">
                        <a class="section" href="/">Home</a>
                        <div class="divider"> / </div>
                        <a class="section" href="/Customer">Área do Cliente</a>
                        <div class="divider"> / </div>
                        <a class="active section">Cadastre-se</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section banner {

}
<div class="text-header">
  <h5>BEM-VINDO À SOLUÇÕES USIMINAS</h5>
  <h6>Por favor, preencha os campos abaixo para criar sua conta na loja</h6>
</div>
<div class="ui grid middle aligned center aligned">
    <div class="row">
        <h5 class="ui header">
            @ViewBag.Title
        </h5>
        <div class="sixteen wide computer sixteen wide tablet sixteen wide mobile column">
            @using (Ajax.BeginForm("Register", "Customer", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @id = "registro_cliente" }))
            {
                @Html.AntiForgeryToken()

                <input type="hidden" name="Address[0].Country" value="BRASIL" />
                <div class="ui segment">
                    <div class="ui grid stackable top aligned left aligned grid">
                        <div class="row two column divided horizontal">
                            <div class="column">
                                <div class="ui form">

                                    <h4 class="ui dividing header aligned center">DADOS CADASTRAIS</h4>
                                    <div class="field required">
                                        <label>Perfil</label>
                                        <div class="ui dropdown selection tipo cliente">
                                            <input type="hidden" id="TypeCustomer" name="TypeCustomer" value="@(cpfCnpj.Length == 14 ? 1 : 0)">
                                            <div class="default text">Perfil de Cliente</div>
                                            <i class="dropdown icon"></i>
                                            <div class="menu">
                                                <div class="item" data-value="0">Pessoa Física</div>
                                                <div class="item" data-value="1">Pessoa Jurídica</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field required pessoa fisica">
                                        <label>Nome</label>
                                        <div class="ui left icon input">
                                            <i class="user icon"></i>
                                            <input type="text" name="name" placeholder="Nome"
                                                   value="@(Model.Name != "" ? Model.Name : "")" data-validate="name">
                                        </div>
                                    </div>
                                    <div class="field required pessoa juridica">
                                        <label>Responsável</label>
                                        <div class="ui left icon input">
                                            <i class="user icon"></i>
                                            <input type="text" name="contact" placeholder="Responsável pela Empresa" data-validate="businessRepresentant">
                                        </div>
                                    </div>
                                    <div class="two fields pessoa juridica">
                                        <div class="field required pessoa juridica">
                                            <label>Razão Social</label>
                                            <div class="ui left icon input">
                                                <i class="suitcase icon"></i>
                                                <input type="text" name="name" placeholder="Razão Social da Empresa"
                                                       value="" data-validate="businessName">
                                            </div>
                                        </div>
                                        <div class="field required pessoa juridica">
                                            <label>Nome Fantasia</label>
                                            <div class="ui left icon input">
                                                <i class="suitcase icon"></i>
                                                <input type="text" data-validate="fantasyName" name="FantasyName" placeholder="Nome Fantasia da Empresa"
                                                       value="">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="two fields">
                                        <div class="field required pessoa fisica">
                                            <label>CPF</label>
                                            <div class="ui left input">
                                                <input type="tel" value="@Html.Raw(cpfCnpj)" name="Cpf_cnpj" class="masked mask_cpf"
                                                       placeholder="000.000.000-00"
                                                       data-validate="cpf" id="_cpf">
                                            </div>
                                        </div>
                                        <div class="field pessoa fisica">
                                            <label>RG</label>
                                            <div class="ui left input">
                                                <input type="text" value="@(Model.Rg_ie != "" ? Model.Rg_ie : "")" name="Rg_ie" placeholder="">
                                            </div>
                                        </div>
                                        <div class="field required pessoa juridica">
                                            <label>CNPJ</label>
                                            <div class="ui left input">
                                                <input type="tel" value="@Html.Raw(cpfCnpj)" name="Cpf_cnpj" class="masked mask_cnpj"
                                                       placeholder="00.000.000/0000-00" data-validate="cnpj" id="_cnpj">
                                            </div>
                                        </div>
                                        <div class="field pessoa juridica">
                                            <label>IE</label>
                                            <div class="ui input checkIe">
                                                <input type="text" value="@(Model.Rg_ie != "" ? Model.Rg_ie : "")" name="Rg_ie" id="inscricaoEstadual" placeholder="Inscrição Estadual">
                                            </div>
                                            <div class="field pessoa juridica margin top small">
                                                <div class="ui checkbox" id="checkIsento">
                                                    <input type="checkbox" name="check_isento">
                                                    <label id="labelIsento">Isento</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="three fields pessoa fisica">
                                        <div class="field required">
                                            <label>Data de Nascimento</label>
                                            <div class="ui input left icon">
                                                <i class="calendar icon"></i>
                                                <input type="text" placeholder="DD/MM/YYYY" class="masked mask_date"
                                                       id="inputDateBirthRegister"
                                                       value=""
                                                       data-validate="birthdate"
                                                       name="DateBirth">
                                            </div>
                                        </div>
                                        <div class="field">
                                            <label>Sexo</label>
                                            <select class="ui dropdown" name="Gender" data-validate="gender">
                                                <option value="">Selecione</option>
                                                <option value="0">
                                                    <i class="male icon"></i>Masculino
                                                </option>
                                                <option value="1">
                                                    <i class="female icon"></i>Feminino
                                                </option>
                                            </select>
                                        </div>
                                        <div class="field">
                                            <label>Estado Civil</label>
                                            <select class="ui dropdown" name="MaritalStatus" data-validate="maritalstatus">
                                                <option value="">Selecione</option>
                                                <option value="1">Solteiro(a)</option>
                                                <option value="0">Casado(a)</option>
                                                <option value="3">Viúvo(a)</option>
                                                <option value="2">Desquitado(a)</option>
                                                <option value="4">Separado(a)</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="two fields">
                                        <div class="field required">
                                            <label>Telefone</label>
                                            <div class="ui left icon input">
                                                <i class="phone icon"></i>
                                                <input type="tel" name="Phone.Phone1"
                                                       placeholder="(00) 00000-0000"
                                                       class="masked mask_phone"
                                                       data-validate="phone">
                                            </div>
                                        </div>
                                        <div class="field">
                                            <label>Celular</label>
                                            <div class="ui left icon input">
                                                <i class="mobile icon"></i>
                                                <input type="tel" name="Phone.Phone2"
                                                       placeholder="(00) 00000-0000" class="masked mask_phone"
                                                       data-validate="mobile">
                                            </div>
                                        </div>
                                    </div>
                                    <h4 class="ui dividing header">Crie sua conta</h4>

                                    <div class="two fields">
                                        <div class="field required">
                                            <label>E-mail</label>
                                            <div class="ui left icon input">
                                                <i class="mail icon"></i>
                                                <input type="text" name="Email" id="Email" placeholder="E-mail"
                                                       value="@Html.Raw(emailDefault)" data-validate="email">
                                            </div>
                                        </div>
                                        <div class="field required">
                                            <label>Senha</label>
                                            <div class="ui right action left icon input">
                                                <i class="lock icon"></i>
                                                <input type="password" name="User.password"
                                                       placeholder="*******" data-validate="password" class="password_box">
                                                <div class="ui basic icon button password_unhide">
                                                    <i class="unhide icon"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field">
                                        <label>Selecione as categorias que deseja receber por e-mail.</label>
                                    </div>
                                    <input type="hidden" name="categories_selected" id="categories_selected" value="" />
                                    <div class="grouped fields" id="categories_news">
                                        @{
                                            if (Model.EmailInfoCategory != null)
                                            {
                                                var categorias = Model.EmailInfoCategory;

                                                foreach (var item in categorias)
                                                {
                                                    <div class="field">
                                                        <div class="ui checkbox">
                                                            <input type="checkbox" id="categoria" data-id="@item.IdEmailInfoCategory" data-nome="@item.Name">
                                                            <label>@item.Name</label>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        }
                                    </div>

                                </div>
                            </div>
                            <div class="column">
                                <div class="ui form">
                                    <h4 class="ui dividing header aligned center">ENDEREÇO DE CADASTRO</h4>
                                    <div class="two fields required">
                                        <div class="field">
                                            <label>CEP</label>
                                            <div class="ui left icon input">
                                                <i class="marker icon"></i>
                                                <input type="text" name="Address[0].ZipCode"
                                                       placeholder="00000-000"
                                                       class="masked mask_zipcode" data-validate="zipcode">
                                            </div>
                                        </div>
                                        <div class="field">
                                            <div class="busca cep">
                                                <p>
                                                    Não sabe o seu CEP? <a href="http://www.buscacep.correios.com.br/sistemas/buscacep/"
                                                                           target="_blank">Consulte Aqui</a>.
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field required">
                                        <label>Endereço</label>
                                        <div class="ui input">
                                            <input type="text" name="Address[0].StreetAddress" placeholder="Endereço" class="endereco" data-validate="address">
                                        </div>
                                    </div>
                                    <div class="three fields">
                                        <div class="field required">
                                            <label>Número</label>
                                            <div class="ui input">
                                                <input type="text" maxlength="10" name="Address[0].Number" placeholder="Número" data-validate="number">
                                            </div>
                                        </div>
                                        <div class="field">
                                            <label>Complemento</label>
                                            <div class="ui input">
                                                <input type="text" name="Address[0].Complement"
                                                       placeholder="Ex: ap. 123" data-validate="complement">
                                            </div>
                                        </div>
                                        <div class="field required">
                                            <label>Bairro</label>
                                            <div class="ui input">
                                                <input type="text" name="Address[0].Neighbourhood" placeholder="Bairro" class="bairro" data-validate="neighborhood">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="two fields">
                                        <div class="field required">
                                            <label>Cidade</label>
                                            <div class="ui input">
                                                <input type="text" name="Address[0].City" placeholder="Cidade" data-validate="city">
                                            </div>
                                        </div>
                                        <div class="field required">
                                            <label>Estado</label>
                                            <select class="ui dropdown search" name="Address[0].State" id="estado_0" data-validate="state">
                                                <option value="">Selecione</option>
                                                <option value="AC">Acre</option>
                                                <option value="AL">Alagoas</option>
                                                <option value="AP">Amapá</option>
                                                <option value="AM">Amazonas</option>
                                                <option value="BA">Bahia</option>
                                                <option value="CE">Ceará</option>
                                                <option value="DF">Distrito Federal</option>
                                                <option value="ES">Espírito Santo</option>
                                                <option value="GO">Goiás</option>
                                                <option value="MA">Maranhão</option>
                                                <option value="MT">Mato Grosso</option>
                                                <option value="MS">Mato Grosso do Sul</option>
                                                <option value="MG">Minas Gerais</option>
                                                <option value="PA">Pará</option>
                                                <option value="PB">Paraíba</option>
                                                <option value="PR">Paraná</option>
                                                <option value="PE">Pernambuco</option>
                                                <option value="PI">Piauí</option>
                                                <option value="RJ">Rio de Janeiro</option>
                                                <option value="RN">Rio Grande do Norte</option>
                                                <option value="RS">Rio Grande do Sul</option>
                                                <option value="RO">Rondônia</option>
                                                <option value="RR">Roraima</option>
                                                <option value="SC">Santa Catarina</option>
                                                <option value="SP">São Paulo</option>
                                                <option value="SE">Sergipe</option>
                                                <option value="TO">Tocantins</option>
                                            </select>
                                        </div>
                                    </div>
                                    <input type="hidden" value="@Convert.ChangeType(DomainCustomer.Entities.Address.enumAddressType.Entrega, typeof(int))" name="Address[0].AddressType" />
                                    <input type="hidden" value="@Convert.ChangeType(DomainCustomer.Entities.Address.enumAddressType.Cadastro, typeof(int))" name="Address[1].AddressType" />
                                    <input type="hidden" name="Address[1].Country" value="BRASIL" />


                                    <div class="field">
                                        <div class="ui checkbox endereco igual">
                                            <input type="checkbox" checked="checked" name="check" id="check">
                                            <label>O endereço de cobrança é o mesmo que o endereço de entrega?</label>
                                        </div>
                                    </div>

                                    <div class="endereco cobranca">


                                        <h4 class="ui dividing header">Endereço de Cobrança</h4>
                                        <div class="two fields required">
                                            <div class="field">
                                                <label>CEP</label>
                                                <div class="ui left icon input">
                                                    <i class="marker icon"></i>
                                                    <input type="text" name="Address[1].ZipCode"
                                                           placeholder="00000-000"
                                                           class="masked mask_zipcode" data-validate="zipcode1">
                                                </div>
                                            </div>
                                            <div class="field">
                                                <div class="busca cep">
                                                    <p>
                                                        Não sabe o seu CEP? <a href="http://www.buscacep.correios.com.br/sistemas/buscacep/"
                                                                               target="_blank">Consulte Aqui</a>.
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field required">
                                            <label>Endereço</label>
                                            <div class="ui input">
                                                <input type="text" name="Address[1].StreetAddress" placeholder="Endereço" data-validate="address1">
                                            </div>
                                        </div>
                                        <div class="three fields">
                                            <div class="field required">
                                                <label>Número</label>
                                                <div class="ui input">
                                                    <input type="text" name="Address[1].Number" placeholder="Número" data-validate="number1">
                                                </div>
                                            </div>
                                            <div class="field">
                                                <label>Complemento</label>
                                                <div class="ui input">
                                                    <input type="text" name="Address[1].Complement"
                                                           placeholder="Ex: ap. 123" data-validate="complement">
                                                </div>
                                            </div>
                                            <div class="field required">
                                                <label>Bairro</label>
                                                <div class="ui input">
                                                    <input type="text" placeholder="Bairro" name="Address[1].Neighbourhood" data-validate="neighborhood1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="two fields">
                                            <div class="field required">
                                                <label>Cidade</label>
                                                <div class="ui input">
                                                    <input type="text" name="Address[1].City" placeholder="Cidade" data-validate="city1">
                                                </div>
                                            </div>
                                            <div class="field required">
                                                <label>Estado</label>
                                                <select class="ui dropdown search" id="estado_1" name="Address[1].State" data-validate="state1">
                                                    <option value="">Selecione</option>
                                                    <option value="AC">Acre</option>
                                                    <option value="AL">Alagoas</option>
                                                    <option value="AP">Amapá</option>
                                                    <option value="AM">Amazonas</option>
                                                    <option value="BA">Bahia</option>
                                                    <option value="CE">Ceará</option>
                                                    <option value="DF">Distrito Federal</option>
                                                    <option value="ES">Espírito Santo</option>
                                                    <option value="GO">Goiás</option>
                                                    <option value="MA">Maranhão</option>
                                                    <option value="MT">Mato Grosso</option>
                                                    <option value="MS">Mato Grosso do Sul</option>
                                                    <option value="MG">Minas Gerais</option>
                                                    <option value="PA">Pará</option>
                                                    <option value="PB">Paraíba</option>
                                                    <option value="PR">Paraná</option>
                                                    <option value="PE">Pernambuco</option>
                                                    <option value="PI">Piauí</option>
                                                    <option value="RJ">Rio de Janeiro</option>
                                                    <option value="RN">Rio Grande do Norte</option>
                                                    <option value="RS">Rio Grande do Sul</option>
                                                    <option value="RO">Rondônia</option>
                                                    <option value="RR">Roraima</option>
                                                    <option value="SC">Santa Catarina</option>
                                                    <option value="SP">São Paulo</option>
                                                    <option value="SE">Sergipe</option>
                                                    <option value="TO">Tocantins</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(termo))
                        {
                            <div class="row one column">
                                <div class="column text right">
                                    <div class="inline field">
                                        <div class="ui checkbox  termo aceite">
                                            <input type="checkbox" tabindex="0" class="hidden" data-validate="termo">
                                            <label>Concorda com o termo de aceite?</label>
                                        </div>
                                        <a id="termo_aceite" style="cursor: pointer; font-size: 0.9em; display: block;">Ler termo de aceite</a>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="column text right">
                                @Html.Action("GetRecaptchaV3", "Company", new { Module = "Register" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="column">
                                <a href="/Customer/Login" class="ui animated button large basic left floated">
                                    <div class="visible content">Cancelar</div>
                                    <div class="hidden content">
                                        <i class="remove icon"></i>
                                    </div>
                                </a>
                                <button type="submit"
                                        class="ui animated button large submit primary right floated" 
                                        tabindex="0">
                                    <div class="visible content">Cadastrar</div>
                                    <div class="hidden content">
                                        <i class="checkmark icon"></i>
                                    </div>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="termo" class="hideme">
    @if (termo != null)
    {
        @Html.Raw(termo);
    }
</div>

<script>
    function OnSuccess(response) {

        if (response.Success == true) {
            swal({
                title: '',
                html: response.Message,
                type: 'success',
                showCancelButton: false,
                confirmButtonColor: '#16ab39',
                cancelButtonColor: '#d33',
                confirmButtonText: 'OK'
            }).then(function () {
                window.location.href = "/area-cliente";
            });
        }
        else {

            swal({
                title: '',
                html: response.Message,
                type: 'error',
                showCancelButton: false,
                confirmButtonColor: '#16ab39',
                cancelButtonColor: '#d33',
                confirmButtonText: 'OK'
            });
        }
    }

    function OnFailure(response) {

        if (response.Success == false) {

            swal({
                title: '',
                text: response.Message,
                type: 'error',
                showCancelButton: false,
                confirmButtonColor: '#16ab39',
                cancelButtonColor: '#d33',
                confirmButtonText: 'OK'
            }).then(function () {
                window.location.href = "/area-cliente";
            });
        }
    }
</script>
<script>
                    window.addEventListener('load', function() {
                    var browserFingerPrint = ''
                    let s = document.createElement('script');
                    s.async = 1;
                    s.src = 'https://cdnjs.cloudflare.com/ajax/libs/fingerprintjs2/2.1.0/fingerprint2.js';
                    let parent_node = document.head || document.body;
                    parent_node.appendChild(s);
                    s.addEventListener('load', function() {
                        Fingerprint2.get(function(components) {
                            browserFingerPrint = Fingerprint2.x64hash128(components.map(function(pair) {
                                return pair.value
                            }).join(), 31)
                        })
                    });

                    var codeGenMetadata = {
                        // todo: put form id here
                        formPropertyId: 6,
                        formSelector: '[id*="registro_cliente"]',
                        subjectIdentifiers: [{"name":"Nome","selector":"[data-validate = \"name\"]","isPrimary":false},{"name":"contact","selector":"[name = \"contact\"]","isPrimary":false},{"name":"name","selector":"[data-validate = \"businessName\"]","isPrimary":false},{"name":"FantasyName","selector":"[name = \"FantasyName\"]","isPrimary":false},{"name":"Cpf","selector":"[data-validate = \"cpf\"]","isPrimary":false},{"name":"Rg_ie","selector":"[name = \"Rg_ie\"]","isPrimary":false},{"name":"Cpf_cnpj","selector":"[data-validate = \"cnpj\"]","isPrimary":false},{"name":"Rg_ie","selector":"[id = \"inscricaoEstadual\"]","isPrimary":false},{"name":"DateBirth","selector":"[name = \"DateBirth\"]","isPrimary":false},{"name":"Phone.Phone1","selector":"[name = \"Phone.Phone1\"]","isPrimary":false},{"name":"Phone.Phone2","selector":"[name = \"Phone.Phone2\"]","isPrimary":false},{"name":"Email","selector":"[name = \"Email\"]","isPrimary":true},{"name":"User.password","selector":"[name = \"User.password\"]","isPrimary":false},{"name":"Address[0].ZipCode","selector":"[name = \"Address[0].ZipCode\"]","isPrimary":false},{"name":"Address[0].StreetAddress","selector":"[name = \"Address[0].StreetAddress\"]","isPrimary":false},{"name":"Address[0].Number","selector":"[name = \"Address[0].Number\"]","isPrimary":false},{"name":"Address[0].Complement","selector":"[name = \"Address[0].Complement\"]","isPrimary":false},{"name":"Address[0].Neighbourhood","selector":"[name = \"Address[0].Neighbourhood\"]","isPrimary":false},{"name":"Address[0].City","selector":"[name = \"Address[0].City\"]","isPrimary":false},{"name":"Address[1].ZipCode","selector":"[name = \"Address[1].ZipCode\"]","isPrimary":false},{"name":"Address[1].StreetAddress","selector":"[name = \"Address[1].StreetAddress\"]","isPrimary":false},{"name":"Address[1].Number","selector":"[name = \"Address[1].Number\"]","isPrimary":false},{"name":"Address[1].Complement","selector":"[name = \"Address[1].Complement\"]","isPrimary":false},{"name":"Address[1].Neighbourhood","selector":"[name = \"Address[1].Neighbourhood\"]","isPrimary":false},{"name":"Address[1].City","selector":"[name = \"Address[1].City\"]","isPrimary":false},{"name":"Gender","selector":"[name = \"Gender\"]","isPrimary":false},{"name":"MaritalStatus","selector":"[name = \"MaritalStatus\"]","isPrimary":false},{"name":"Address[0].State","selector":"[name = \"Address[0].State\"]","isPrimary":false},{"name":"Address[1].State","selector":"[name = \"Address[1].State\"]","isPrimary":false}],
                        consentIdentifiers: [{"type":"checkbox","name":"categoria","selector":"[id = \"categoria\"]","propertyId":649,"consentValue":"checked"}],
                        consentTrigger: {
                            action: 'click',
                            selector: '[class = "ui animated button large submit primary right floated"]'
                        }
                    }

                    var isConsentTaken = false
                    var prepareConsentPayload = function(formEle) {
                        if (!isConsentTaken) {
                            isConsentTaken = true
                            const emailField = formEle.querySelector("[type = \"email\"]")
                            let payload = {
                                form_info: {
                                    subject_info: {}
                                },
                                consent_info: [],
                                browser_finger_print: browserFingerPrint,
                                policy_version: 1,
                                form_property_id: codeGenMetadata.formPropertyId
                            }

                            if (codeGenMetadata.consentIdentifiers.length === 1 && codeGenMetadata.consentIdentifiers[0].name === 'DefaultElementId') {
                                payload.consent_info.push({
                                    granted: true,
                                    timestamp: parseInt(new Date().getTime() / 1000),
                                    property_id: parseInt(codeGenMetadata.consentIdentifiers[0].propertyId)
                                })
                            } else {
                                codeGenMetadata.consentIdentifiers.forEach(function(identifier) {
                                    payload.consent_info.push({
                                        granted: getGranted(identifier, formEle),
                                        timestamp: parseInt(new Date().getTime() / 1000),
                                        property_id: parseInt(identifier.propertyId)
                                    })
                                })
                            }

                            codeGenMetadata.subjectIdentifiers.forEach(function(identifier) {
                                payload.form_info.subject_info[identifier.name] = formEle.querySelector(identifier.selector) && formEle.querySelector(identifier.selector).value || ''
                                if (!payload.hasOwnProperty('uuid') && identifier.isPrimary) {
                                    payload.uuid = payload.form_info.subject_info[identifier.name] || ''
                                }
                            })
                            return payload
                        }
                    }

                    function getGranted(identifier, formEle) {
                        if (identifier.type == 'checkbox') {
                            return identifier.consentValue === 'checked' ? formEle.querySelector(identifier.selector).checked : !formEle.querySelector(identifier.selector).checked
                        } else {
                            return identifier.consentValue === Array.prototype.slice.call(formEle.querySelectorAll(identifier.selector)).filter(function(r) { return r.checked })[0].value
                        }
                    }

                    function postConsentedItems(consentedItem) {
                        var xhr = new XMLHttpRequest();
                        xhr.open('POST', 'https://app.securiti.ai/privaci/v1/consent/form/singleupload', false);
                        xhr.setRequestHeader('Content-type', 'application/json');
                        xhr.setRequestHeader('X-Auth-Token', 'ebf65ee3-6122-4cf6-bb36-ad724484ab98');

                        xhr.onload = function () {
                            if (this.status >= 200 && this.status < 300) {
                                let resp = JSON.parse(xhr.response)
                                if (resp.status === 0) {
                                    console.log('consent uploaded successfully');
                                }
                            } else {
                                console.log('consent upload failed', this.status, xhr.statusText);
                            }
                            setTimeout(function () { isConsentTaken = false }, 0)
                        };
                        xhr.onerror = function () {
                            console.log('consent upload failed', this.status, xhr.statusText);
                            setTimeout(function () { isConsentTaken = false }, 0)
                        };
                        xhr.send(JSON.stringify(consentedItem));
                    }

                    var uploadConsent = function () {
                        let payload = prepareConsentPayload(document.querySelector(codeGenMetadata.formSelector))
                        if(payload) {
                            return postConsentedItems(payload);
                        }
                    }

                    document.querySelector(codeGenMetadata.formSelector).addEventListener('submit', function () {
                        uploadConsent()
                    })

                    if (codeGenMetadata.consentTrigger.action === 'click') {
                        document.querySelector(codeGenMetadata.formSelector).querySelector(codeGenMetadata.consentTrigger.selector)
                            .addEventListener(codeGenMetadata.consentTrigger.action, function () {
                                uploadConsent()
                            })
                        }
                    })</script>

